<?php
declare(strict_types=1);

namespace Tests\Unit;


use PHPUnit\Framework\TestCase;
use StatusCode\MainStatusCodeHandler;
use StatusCode\StatusCodeHandlerFactory;

class BadRequestStatusCodeHandlerTest extends TestCase
{
    /**
     * @var \StatusCode\StatusCodeHandlerInterface
     */
    private $handler;
    /**
     * @var MainStatusCodeHandler
     */
    private $mainHandler;
    /**
     * @var int
     */
    private $status_code = 400;

    /**
     * Initialize method
     */
    public function setUp(): void
    {
        $this->handler      = (new StatusCodeHandlerFactory())->__invoke();
        $this->mainHandler  = new MainStatusCodeHandler($this->handler);

        parent::setUp(); // TODO: Change the autogenerated stub
    }

    /**
     *  Test success
     */
    public function testSuccessBadRequest()
    {
        $message = (string) 'Test bad request success';
        $response = $this->mainHandler->main($this->status_code, $message);

        $this->assertIsArray($response->toArray());
        $this->assertNotNull($response->toArray());
        $this->assertEquals($response->getCode(), $this->status_code);
        $this->assertEquals($response->getMessage(), $message);
    }

    /**
     * Test Sucess default message
     */
    public function testSuccessDefaultMessageBadRequest()
    {
        $response = $this->mainHandler->main($this->status_code);

        $this->assertIsArray($response->toArray());
        $this->assertNotNull($response->toArray());
        $this->assertEquals($response->getCode(), $this->status_code);
        $this->assertEquals($response->getMessage(), 'Bad Request');
    }

    /**
     * Test Error
     */
    public function testErrorBadRequest()
    {
        $status_code = 666;
        $response = $this->mainHandler->main($status_code);

        $this->assertIsArray($response->toArray());
        $this->assertNotNull($response->toArray());
        $this->assertEquals($response->getCode(), 400);
        $this->assertEquals($response->getMessage(), 'Invalid status code');
    }
}
